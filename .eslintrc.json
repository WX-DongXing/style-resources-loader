{
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "sourceType": "module",
        "ecmaFeatures": {
            "jsx": true
        },
        "project": [
            "tsconfig.json",
            "test/tsconfig.json"
        ]
    },
    "extends": [
        "eslint:all",
        "plugin:@typescript-eslint/all",
        "plugin:import/errors",
        "plugin:import/typescript",
        "prettier"
    ],
    "plugins": [
        "@typescript-eslint",
        "import",
        "prettier"
    ],
    "env": {
        "browser": true,
        "node": true,
        "es6": true
    },
    "globals": {
        "features": true
    },
    "rules": {
        "array-element-newline": [
            "error",
            "consistent"
        ],
        "arrow-parens": [
            "error",
            "as-needed"
        ],
        "class-methods-use-this": "off",
        "dot-location": [
            "error",
            "property"
        ],
        "func-names": [
            "error",
            "as-needed"
        ],
        "id-length": "off",
        "implicit-arrow-linebreak": "off",
        "max-len": [
            "error",
            120
        ],
        "max-lines": "off",
        "max-lines-per-function": "off",
        "max-params": "off",
        "max-statements": "off",
        "multiline-ternary": [
            "error",
            "always-multiline"
        ],
        "no-await-in-loop": "off",
        "no-bitwise": "off",
        "no-confusing-arrow": "off",
        "no-constant-condition": [
            "error",
            {
                "checkLoops": false
            }
        ],
        "no-continue": "off",
        "no-duplicate-imports": "off",
        "no-empty": [
            "error",
            {
                "allowEmptyCatch": true
            }
        ],
        "no-implicit-coercion": "off",
        "no-invalid-this": "off",
        "no-mixed-operators": "off",
        "no-process-env": "off",
        "no-promise-executor-return": "off",
        "no-ternary": "off",
        "no-void": [
            "error",
            {
                "allowAsStatement": true
            }
        ],
        "new-cap": "off",
        "one-var": [
            "error",
            "never"
        ],
        "padded-blocks": [
            "error",
            "never"
        ],
        "padding-line-between-statements": [
            "error",
            {
                "blankLine": "always",
                "prev": [
                    "const",
                    "let",
                    "var"
                ],
                "next": "*"
            },
            {
                "blankLine": "always",
                "prev": "*",
                "next": [
                    "const",
                    "let",
                    "var"
                ]
            },
            {
                "blankLine": "any",
                "prev": [
                    "const",
                    "let",
                    "var"
                ],
                "next": [
                    "const",
                    "let",
                    "var"
                ]
            },
            {
                "blankLine": "always",
                "prev": "*",
                "next": "return"
            },
            {
                "blankLine": "always",
                "prev": "block-like",
                "next": "*"
            },
            {
                "blankLine": "always",
                "prev": "*",
                "next": "block-like"
            }
        ],
        "prefer-destructuring": [
            "error",
            {
                "object": true,
                "array": false
            }
        ],
        "quote-props": [
            "error",
            "as-needed"
        ],
        "quotes": [
            "error",
            "single",
            {
                "avoidEscape": true
            }
        ],
        "sort-imports": "off",
        "sort-keys": "off",
        "wrap-regex": "off",

        "import/default": "off",
        "import/exports-last": "error",
        "import/first": "error",
        "import/newline-after-import": "error",
        "import/no-absolute-path": "error",
        "import/no-amd": "error",
        "import/no-anonymous-default-export": "off",
        "import/no-commonjs": "error",
        "import/no-cycle": "error",
        "import/no-duplicates": "error",
        "import/no-dynamic-require": "error",
        "import/no-extraneous-dependencies": "error",
        "import/no-mutable-exports": "error",
        "import/no-named-default": "error",
        "import/no-nodejs-modules": "off",
        "import/no-self-import": "error",
        "import/no-unassigned-import": "error",
        "import/no-unused-modules": "error",
        "import/no-useless-path-segments": "error",
        "import/no-webpack-loader-syntax": "error",
        "import/unambiguous": "error",

        "@typescript-eslint/comma-dangle": [
            "error",
            "always-multiline"
        ],
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-member-accessibility": [
            "error",
            {
                "accessibility": "no-public"
            }
        ],
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "typeLike",
                "format": ["PascalCase"]
            }
        ],
        "@typescript-eslint/no-confusing-void-expression": [
            "error",
            {
                "ignoreArrowShorthand": true
            }
        ],
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-empty-interface": [
            "error",
            {
                "allowSingleExtends": true
            }
        ],
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-extraneous-class": [
            "error",
            {
                "allowWithDecorator": true
            }
        ],
        "@typescript-eslint/no-implicit-any-catch": "off",
        "@typescript-eslint/no-invalid-this": "off",
        "@typescript-eslint/no-invalid-void-type": "off",
        "@typescript-eslint/no-magic-numbers": "off",
        "@typescript-eslint/no-misused-promises": [
            "error",
            {
                "checksVoidReturn": false
            }
        ],
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/no-shadow": "off",
        "@typescript-eslint/no-type-alias": "off",
        "@typescript-eslint/no-unnecessary-condition": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unused-expressions": [
            "error",
            {
                "allowShortCircuit": true,
                "allowTernary": true,
                "allowTaggedTemplates": true
            }
        ],
        "@typescript-eslint/no-unused-vars": [
            "error",
            {
                "args": "after-used",
                "ignoreRestSiblings": true
            }
        ],
        "@typescript-eslint/object-curly-spacing": [
            "error",
            "never"
        ],
        "@typescript-eslint/prefer-readonly-parameter-types": "off",
        "@typescript-eslint/prefer-ts-expect-error": "off",
        "@typescript-eslint/promise-function-async": "off",
        "@typescript-eslint/quotes": [
            "error",
            "single",
            {
                "avoidEscape": true
            }
        ],
        "@typescript-eslint/restrict-template-expressions": [
            "error",
            {
                "allowNumber": true
            }
        ],
        "@typescript-eslint/sort-type-union-intersection-members": "off",
        "@typescript-eslint/space-before-function-paren": [
            "error",
            {
                "anonymous": "always",
                "named": "never",
                "asyncArrow": "always"
            }
        ],
        "@typescript-eslint/strict-boolean-expressions": "off",
        "@typescript-eslint/typedef": "off",

        "prettier/prettier": "error"
    },
    "overrides": [
        {
            "files": ["*.spec.ts"],
            "rules": {
                "@typescript-eslint/init-declarations": "off"
            }
        }
    ],
    "settings": {
        "import/parsers": {
            "@typescript-eslint/parser": [
                ".ts",
                ".tsx"
            ]
        }
    }
}
